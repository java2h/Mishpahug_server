package application.configurations;

import application.MishpohugApplication;
import application.entities.UserEntity;
import application.entities.UserSession;
import application.repositories.UserSessionRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.authentication.UsernamePasswordAuthenticationToken;
import org.springframework.security.core.Authentication;
import org.springframework.security.core.context.SecurityContextHolder;
import org.springframework.web.filter.OncePerRequestFilter;

import javax.servlet.*;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import java.io.IOException;

public class SecurityFilter extends OncePerRequestFilter {

    @Autowired
    public UserSessionRepository userSessionRepository;

    @Override
    protected void doFilterInternal(HttpServletRequest request, HttpServletResponse response, FilterChain filterChain) throws ServletException, IOException {
        MishpohugApplication.log.debug("Security Filter");
        String token = request.getHeader("Authorization");
        if (token != null) {
            MishpohugApplication.log.debug("Filter -> token is not null");
            if (userSessionRepository.findByTokenAndIsValidTrue(token) != null){
                MishpohugApplication.log.debug("Filter -> token is valid");
                UserSession userSession = userSessionRepository.findByTokenAndIsValidTrue(token);
                String usernameForController = request.getHeader("username");

                if (usernameForController == null) {
                    usernameForController = "no name";
                }
                Authentication key = new UsernamePasswordAuthenticationToken(usernameForController,
                            null);
                SecurityContextHolder.getContext().setAuthentication(key);
            }
        }
        MishpohugApplication.log.debug("Filter -> exit");
        filterChain.doFilter(request, response);
    }
}
